---
layout: post
title:  "LSP - Liskov Substitution Principle (with examples)"
date:   2020-08-14 18:10:00:00 +0000
categories: programming solid
---

The Liskov Substitution is a principle postulated by Barbara Liskov and included by Robert Martin among the **SOLID** Principles 
for Object Oriented software development.

**SOLID** is a mnemonic achronym that stands for:

- **S**ingle Responsibiliy (SRP)
- **O**pen closed (OCP)
- **L**iskov Substitution (LSP)
- **I**nterface Segregation (ISP)
- **D**ependency Inversion (DIP)

This 5 principles must guide every software developer in wrinting his code. In this article I'll focus on the third one.

This is an article of the SOLID Principles serie. Checkout the other articles here:

- [Single Responsibiliy (SRP)](/programming/solid/2020/08/12/solid-srp.html)
- [Open/Closed (OCP)](/programming/solid/2020/08/13/solid-ocp.html)
- [Interface Segregation (ISP)](//#)
- [Dependency Inversion (DIP)](//#)

## The Liskov Substitution Principle

The Liskov Substitution Principle says that

> _"In a computer program P, if S is a subtype of T, then objects of type T may be replaced with objects of type S (i.e., objects of type S may substitute objects of type T) without altering any of the desirable properties of P (correctness, task performed, etc.)"_

To make it more clear, let's translate it in code:

```java
     public class P{
	 
		private T myField = new T();
	 
	 }
	 
	 public class T{
	 
		//T implementation
	 
	 }
	 
	 public class S extends T{
	 
		//S implementation
	 
	 }
```

The LSP states that if you change the Program P as follows:

```java
     public class P{
	 
		private T myField = new S();
	 
	 }
```

The program should still work as expected.


## About the creators

[**Barbara Liskov**](https://en.wikipedia.org/wiki/Barbara_Liskov) is an american computer scientist and Institute Professor at Boston MIT.
In 2008 she won the Turing award for her contribution in the Object Oriented Programming principle definition.

The SOLID principles were postulated by Robert Martin nei primi anni 2000.
[**Robert Martin**](https://en.wikipedia.org/wiki/Robert_C._Martin), aka _"Uncle Bob"_ is a coder since 1970 and he's now a world-wide-appreciated software architect, ICT expert and clean code evangelist.
Together with Martin Fowler, Ken Shwaber and other forteen people, he was also one of the creator of the [Agile Manifesto](https://agilemanifesto.org/) that is now a guideline for many development team all around the world.


## References

- Agile Software Development: Principles, Patterns and Practices - Robert C. Martin
- The Clean Coder: A Code of Conduct for Professional Programmers - Robert C. Martin
- Clean architecture - Robert C. Martin
